tasks.withType(Test) {
    useJUnitPlatform()
    testLogging {
        events 'PASSED', 'FAILED', 'SKIPPED'
    }
    afterSuite { desc, result ->
        if (!desc.parent) {
            println "\nTest result: ${result.resultType}"
            println "Test summary: ${result.testCount} tests, " +
                    "${result.successfulTestCount} succeeded, " +
                    "${result.failedTestCount} failed, " +
                    "${result.skippedTestCount} skipped"
        }
    }
}

sourceSets {
    integration {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDirs += 'src/integration/kotlin'

            integration.runtimeClasspath += integration.output
        }
        resources.srcDir file('src/integration/resources')
    }
}
configurations {
    integrationImplementation.extendsFrom testImplementation
    integrationRuntimeOnly.extendsFrom testRuntimeOnly
}

task integration(type: Test) {
    group = LifecycleBasePlugin.VERIFICATION_GROUP
    description = 'Runs the integration tests.'

    testClassesDirs += sourceSets.integration.output.classesDirs
    classpath = sourceSets.integration.runtimeClasspath
}
integration.mustRunAfter test

compileIntegrationKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
